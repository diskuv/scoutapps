; Recommendation: Check this file into source control so opam-monorepo works.
; Auto-generated by the ocamldunear archiver. Edit your CMakeLists.txt files, not this.

; Create a C object file, and a Dune created executable.
;
; The C object file will be used by CMake to build its own executable
; target. CMake-based IDEs usually have good support for debugging,
; coverage and profiling these CMake executable targets.
;
; In contrast, the Dune created executable is mainly for `dune runtest`
; to be able to test the executables without reliance on CMake.
;
; Because the CMake created executable can have a custom main() entry point,
; the CMake created executable may behave differently than the Dune created
; executable. The executable from CMake should **always** be the one installed
; in production.
(executable
 (name test_Std_ml)
 (modes (native object) exe)
 (flags
  (:standard -warn-error -A))
 ; -dstartup: keep camlstartup*.asm/camlstartup*.S
 ;     startup assembly source code available for IDE
 ;     debugging
 ; -S: keep camlasm*.asm/camlasm*.S intermediate assembly
 ;     source code available for IDE debugging
 (ocamlopt_flags
  (:standard -dstartup -S))
 (modules
  test_Std_ml
  )
 (libraries
  tezt
  lwt
  lwt.unix
  SquirrelScout_Std
  ))

; Install the C object file to a known location for CMake. This is the
; artifact used by CMake to link with C, and for exporting nativecode
; library artifacts.
; Install the bytecode executable to a known location for CMake, for
; exporting the bytecode library artifacts that together make the bytecode
; executable. Building a .bc target will fail if the entry module indirectly
; references a `external` OCaml expression ("The external function ... is not
; available"). Instead, make an empty entry module for a one-off STATIC
; library that has a target link to the STATIC library you are exporting.
; Install the Dune generated executable alongside it, to troubleshoot
; the CMake linked executable.
(install
 (section lib_root)
 (package SonicScout_Units)
 (files
  (test_Std_ml.exe%{ext_obj} as ocamldunear/test_Std_ml.exe%{ext_obj})
  (test_Std_ml.bc%{ext_exe} as ocamldunear/test_Std_ml.bc%{ext_exe})
  (test_Std_ml.exe as ocamldunear/test_Std_ml.exe)))
